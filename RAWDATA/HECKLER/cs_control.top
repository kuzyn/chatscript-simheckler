# this function is executed once for every new user chatting with James Carlton
outputmacro: heckler()  # you get heckler by default
$cs_token = #DO_INTERJECTION_SPLITTING  | #DO_SUBSTITUTE_SYSTEM   | #DO_NUMBER_MERGE | #DO_DATE_MERGE  | #DO_PROPERNAME_MERGE  | #DO_SPELLCHECK  | #DO_PARSE 

^addtopic(~introductions)
$cs_control_main = ~control
$userprompt = ^"heckler: >"
$botprompt = ^"comedian: "

# variables
$city_name = null
$comedian_enjoy = null
$comedian_annoy = null
$crowd_enjoy = null
$crowd_annoy = null
$routine_finnished = null
$set_finnished = null
$comedian_leaves = null
$heckle_number = null

table: defaultbot (^name)
^createfact(^name defaultbot defaultbot)
DATA:
heckler

topic: ~control system ()

# debug and dev cases
u: (< shut up >) $shutup = 1
u: (< talk >) $shutup = null
u: (< say _*) ^keep() ^repeat() '_0

u: (\[ callback \]) Callback seen.
u: (\[ loopback \]) Loopback seen.
u: (\[ alarm \]) Alarm seen.
u: (< loopback test) \[ loopback=1000 \] Loopback requested.
u: (< callback test) \[ callback=1000 \] Callback requested.
u: (< alarm test) \[ alarm=5000 \] Alarm requested.

# on startup, do introduction
u: ( %input<%userfirstline) 
	^gambit(~introductions)

u: () # main per-sentence processing

	$$currenttopic = %topic		# get the current topic at start of volley

    # set is finished or comedian has left
	if ($set_finnished OR $comedian_leaves) {
		^repeat() ^keep() 
		[/*the room empties/*] [/*people shuffle/*] [/*you stand alone/*]
	}	
	
	# comedian routine is over
	if ($routine_finnished AND !$set_finnished) {
		Thank you $city_name, that was a great night!
		$set_finnished = 1
	}

	# comedian reach annoyed limit
	if ($comedian_annoy >= 4 AND !$comedian_leaves) {
		$routine_finnished = 1 
		$set_finnished = 1
		$comedian_leaves = 1
		OKAY! I'VE HAD IT WITH THE ASSHOLE! CIAO!
	}

	# wrap everything else so there is no processing if the set is over
	if (!$set_finnished OR !$comedian_leaves) {

		if ( %response == 0 ) {nofail(TOPIC ^rejoinder())}	# try for rejoinders. might generate an answer directly from what we are looking for.

		if (%length == 0 AND %response == 0 )
		{
			nofail(TOPIC ^gambit($$currenttopic))  # gambit current topic since no input (usually start of conversation)
		}


		if (%response == 0) { nofail(TOPIC ^respond($$currenttopic)) } # current topic tries to respond to his input

		if (%response == 0) # see if some other topic has keywords matching his input (given we have no response yet)
		{
			@8 = ^keywordtopics()	# get topics referred in input
			loop()
			{
				$$topic = first(@8subject)
				nofail(TOPIC ^respond($$topic))
				if (%response != 0) # stop when we find something to say
				{
					^end(RULE)	# we are done, this terminates the loop (not the rule)
				}
			}
		}	


		# if we have rejoinders for what we said OR we asked a question, stop here
		if (%outputrejoinder OR %lastquestion) 
		{
			end(TOPIC)
		}

		if (%response == 0 AND ^marked($$currenttopic)) { nofail(TOPIC ^gambit($$currenttopic)) } # gambit current topic since keywords match current topic

		if (%response == 0) # gambit from ANY matching topic
		{
			@8 = ^keywordtopics()	# get topics referred in input
			loop()
			{
				$$topic = first(@8subject)
				nofail(TOPIC ^Gambit($$topic))	# gambit in best matching topic
				if (%response != 0) # stop when we find something
				{
					$heckle_number += 1
					!!!HECKLE NUMBER $heckle_number!!!
					^end(RULE)
				}
			}
		}
		# if no topic reacts, go to the last ditch keywordless topic
		if ( %length >= 1 AND %response == 0 ) 
		{
			nofail( TOPIC ^respond(~keywordless) )
			if (%response == 1) {
				^repeat() ^keep()
				$comedian_annoy += 1
				$heckle_number += 1 
				!!!ANNOYED LEVEL $comedian_annoy!!!	
			}
		}

		if (%response == 0){ nofail(TOPIC ^gambit($$currenttopic)) } # gambit from current topic even though no keywords matched

	}